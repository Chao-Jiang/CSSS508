?require
library(knitr)
knit_with_parameters('C:/Users/cclan/OneDrive/GitHub/CSSS508/docs/syllabus.Rmd')
Sys.which("pdflatex")
sessionInfo()
Sys.getenv("PATH")
Sys.setenv(PATH=paste(Sys.getenv("PATH"),"C:\Program Files\MiKTeX 2.9\miktex\bin\x64",sep=";"))
Sys.setenv(PATH=paste(Sys.getenv("PATH"),"C:\\Program Files\\MiKTeX 2.9\\miktex\bin\\x64",sep=";"))
Sys.which("pdflatex")
Sys.which("pdflatex")
Sys.getenv("PATH")
Sys.getenv("PATH")
Sys.which("pdflatex")
?Sys.which
Sys.which("pdflatex")
Sys.getenv("PATH")
Sys.which("pdflatex")
?install.packages
library(learnr)
install.packages("https://github.com/clanfear/CSSS508/raw/master/uwcsss508_0.1.0.zip", repos = NULL)
library(dplyr)
?distinct
?ifelse
library(gapminder)
head(gapminder)
unique(gapminder$country)
# Chunk 1: set-options
options(width = 90)
# Chunk 2
library(dplyr)
library(gapminder)
Canada <- gapminder %>%
filter(country == "Canada")
# Chunk 3
former_yugoslavia <- c("Bosnia and Herzegovina", "Croatia", "Macedonia", "Montenegro", "Serbia", "Slovenia")
yugoslavia <- gapminder %>%
filter(country %in% former_yugoslavia)
tail(yugoslavia, 2)
# Chunk 4
gapminder %>% distinct(continent, year)
# Chunk 5
gapminder %>% distinct(continent, year, .keep_all=TRUE)
# Chunk 6
gapminder %>% filter(country == "Canada") %>% head(2)
# Chunk 9
set.seed(0413) # makes random numbers repeatable
yugoslavia %>% sample_n(size = 6, replace = FALSE)
# Chunk 10
yugoslavia %>% arrange(year, desc(pop))
# Chunk 11
yugoslavia %>% select(country, year, pop) %>% head(4)
# Chunk 12
yugoslavia %>% select(-continent, -pop, -lifeExp) %>% head(4)
# Chunk 14
yugoslavia %>%
select(Life_Expectancy = lifeExp) %>%
head(4)
# Chunk 15
yugoslavia %>%
select(country, year, lifeExp) %>%
rename(Life_Expectancy = lifeExp) %>%
head(4)
# Chunk 16
library(pander)
yugoslavia %>% filter(country == "Serbia") %>%
select(year, lifeExp) %>%
rename(Year = year, `Life Expectancy` = lifeExp) %>%
head(5) %>%
pander(style = "rmarkdown", caption = "Serbian life expectancy")
# Chunk 17
yugoslavia %>% filter(country == "Serbia") %>%
select(year, pop, lifeExp) %>%
mutate(pop_million = pop / 1000000,
life_exp_past_40 = lifeExp - 40) %>%
head(5)
# Chunk 19
yugoslavia %>%
mutate(short_country = ifelse(country == "Bosnia and Herzegovina", "B and H", as.character(country))) %>%
select(short_country, year, pop) %>%
arrange(year, short_country) %>%
head(3)
yugoslavia %>%
mutate(recode(country, `Bosnia and Herzegovina`="B and H"))
yugoslavia %>%
mutate(country=recode(country, `Bosnia and Herzegovina`="B and H"))
yugoslavia
unique(yugoslavia$country)
yugoslavia %>%
mutate(country = recode(country, `Bosnia and Herzegovina`="B and H",
Montenegro="M"))
yugoslavia %>%
mutate(country = recode(country, `Bosnia and Herzegovina`="B and H",
Montenegro="M")) %>% distinct(country)
?sqrt
?cat
?c
(98.22+102.73)/6
install.packages("https://github.com/clanfear/CSSS508/raw/master/uwcsss508_0.1.0.zip", repos=NULL, type="binary")
library(uwcsss508)
library(learnr)
run_tutorial("tutorial_1", "uwcsss508")
rm(list = ls())
install.packages("https://github.com/clanfear/CSSS508/raw/master/uwcsss508_0.1.0.zip", repos=NULL, type="binary")
library(learnr)
library(uwcsss508)
run_tutorial("tutorial_1", "uwcsss508")
?install.packages
?plot
1100*1.2
450*1.2
4.1*.75
1100/350
350/1100
16/9
9/16
7.5/3
1100/2.5
10/4.5
4.5/10
0.45*7
1100/550
7/3
1100/350
7/3.15
1100/500
1100/4.5
1100/450
7/3.15
7/3.25
7/3
7/2.8
7/2.9
update.packages(ask = F)
library(dplyr)
library(gapminder)
data(gapminder)
gapminder
gapminder %>% mutate(
gdpPercap_ordinal = case_when(
x < 700 ~ "low",
x >= 700 & x < 800 "moderate",
x >= 900 "high"
)
)
gapminder %>% mutate(
gdpPercap_ordinal = case_when(
x < 700 ~ "low",
x >= 700 & x < 800 ~ "moderate",
x >= 900 ~ "high"
)
)
gapminder %>% mutate(
gdpPercap_ordinal = case_when(
gdpPercap < 700 ~ "low",
gdpPercap >= 700 & x < 800 ~ "moderate",
gdpPercap >= 900 ~ "high"
)
)
gapminder %>% mutate(
gdpPercap_ordinal = case_when(
gdpPercap < 700 ~ "low",
gdpPercap >= 700 & gdpPercap < 800 ~ "moderate",
gdpPercap >= 900 ~ "high"
)
)
gapminder %>% mutate(
gdpPercap_ordinal = case_when(
gdpPercap < 700 ~ "low",
gdpPercap >= 700 & gdpPercap < 800 ~ "moderate",
gdpPercap >= 800 ~ "high"
)
)
patterns <- list(
x %% 35 == 0 ~ "fizz buzz",
x %% 5 == 0 ~ "fizz",
x %% 7 == 0 ~ "buzz",
TRUE ~ as.character(x)
)
case_when(!!! patterns)
x <- 1:50
patterns <- list(
x %% 35 == 0 ~ "fizz buzz",
x %% 5 == 0 ~ "fizz",
x %% 7 == 0 ~ "buzz",
TRUE ~ as.character(x)
)
case_when(!!! patterns)
gapminder %>% mutate(gdpPercap_ordinal = case_when(
gdpPercap < 700 ~ "low",
gdpPercap >= 700 & gdpPercap < 800 ~ "moderate",
TRUE ~ "high" ) )
?summarize_all
# Chunk 1: set-options
options(width = 90)
# Chunk 2
library(dplyr)
library(gapminder)
Canada <- gapminder %>%
filter(country == "Canada")
former_yugoslavia <- c("Bosnia and Herzegovina", "Croatia", "Macedonia", "Montenegro", "Serbia", "Slovenia")
yugoslavia <- gapminder %>%
filter(country %in% former_yugoslavia)
tail(yugoslavia, 2)
gapminder %>% distinct(continent, year)
yugoslavia %>% select(-continent, -pop, -lifeExp) %>% head(4)
yugoslavia %>%
mutate(short_country = ifelse(country == "Bosnia and Herzegovina",
"B and H", as.character(country))) %>%
select(short_country, year, pop) %>%
arrange(year, short_country) %>%
head(3)
yugoslavia %>%
mutate(country = recode(country, `Bosnia and Herzegovina`="B and H",
Montenegro="M")) %>% distinct(country)
yugoslavia
yugoslavia %>%
filter(year == 1982) %>%
summarize(n_obs = n(),
total_pop = sum(pop),
mean_life_exp = mean(lifeExp),
range_life_exp = max(lifeExp) - min(lifeExp))
yugoslavia %>%
filter(year == 1982) %>%
summarize_all(funs(mean, sd),
lifeExp, pop)
yugoslavia %>%
filter(year == 1982) %>%
summarize_at(vars(lifeExp, pop), funs(mean, sd))
?distinct
?desc
library(nycflights13)
data(nycflights13)
data(flights)
flights
?nycflightys13
?nycflights13
??nycflights13
?flights
?`%>%`
?`%in%`
library(dplyr)
?`%>%`
1600*.8
1600*.9
900*.9
1440/900
?scale
?type
letters
?odds
odds <- function(p) {return(p/(p-1))}
odds(0.5)
odds(1)
0.5^-1
0.1^-1
odds <- function(p) {return(p/(p^-1))}
odds(1)
odds(0.5)
odds <- function(p) {return(1/(p^-1))}
odds(0.5)
odds(0.2)
odds <- function(p) {return(1/(p^-1))}
odds(0.2)
0.000135^-1
0.000135^-1
(0.000135^-1)*.000135
?ggsave
library(tidyverse)
?ggsave
?read_csv
# Chunk 1: setup
setwd("C:/Users/cclan/OneDrive/GitHub/CSSS508/Lectures/Week5")
# Chunk 2
getwd()
# Chunk 4
library(readr)
# Chunk 5
billboard_2000_raw <- read_csv(file = "https://raw.githubusercontent.com/hadley/tidyr/master/vignettes/billboard.csv")
# Chunk 6
# str(billboard_2000_raw)
str(billboard_2000_raw[, 65:ncol(billboard_2000_raw)])
# Chunk 7
# paste is a concatenation function
# i = integer, c = character, D = date
# rep("i", 76) does the 76 weeks of integer ranks
bb_types <- paste(c("icccD", rep("i", 76)), collapse="")
billboard_2000_raw <- read_csv(file = "https://raw.githubusercontent.com/hadley/tidyr/master/vignettes/billboard.csv", col_types = bb_types)
# Chunk 9
dput(head(cars, 8))
# Chunk 10
temp <- structure(list(speed = c(4, 4, 7, 7, 8, 9, 10, 10), dist = c(2,
10, 4, 22, 16, 10, 18, 26)), .Names = c("speed", "dist"), row.names = c(NA, 8L), class = "data.frame")
View(billboard_2000_raw)
library(forcats)
?parse_factor
