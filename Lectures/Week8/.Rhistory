mutate(date = date.entered + (week - 1) * 7)
billboard_2000 %>% arrange(artist, track, week) %>%
select(artist, date.entered, week, date, rank) %>% head(4)
# Chunk 24
plot_by_day <- ggplot(billboard_2000,
aes(x = date, y = rank, group = track)) +
geom_line(size = 0.25, alpha = 0.4) +
# just show the month abbreviation label (%b)
scale_x_date(date_breaks = "1 month", date_labels = "%b") +
scale_y_reverse() + theme_bw() +
# add lines for start and end of year:
# input as dates, then make numeric for plotting
geom_vline(xintercept = as.numeric(as.Date("2000-01-01", "%Y-%m-%d")), col = "red") +
geom_vline(xintercept = as.numeric(as.Date("2000-12-31", "%Y-%m-%d")), col = "red")
# Chunk 25
plot_by_day
# Chunk 26
spd_raw <- read_csv("https://raw.githubusercontent.com/clanfear/CSSS508/master/Seattle_Police_Department_911_Incident_Response.csv")
# Chunk 27
str(spd_raw$`Event Clearance Date`)
# Chunk 28
# install.packages("lubridate")
library(lubridate)
spd <- spd_raw %>% mutate(`Event Clearance Date` = mdy_hms(`Event Clearance Date`, tz = "America/Los_Angeles"))
str(spd$`Event Clearance Date`)
# Chunk 29
demo_dts <- spd$`Event Clearance Date`[1:2]
(date_only <- as.Date(demo_dts, tz = "America/Los_Angeles"))
(day_of_week_only <- weekdays(demo_dts))
(one_hour_later <- demo_dts + dhours(1))
# Chunk 30
spd_times <- spd %>%
select(`Initial Type Group`, `Event Clearance Date`) %>%
mutate(hour = hour(`Event Clearance Date`))
time_spd_plot <- ggplot(spd_times, aes(x = hour)) +
geom_histogram(binwidth = 2) +
facet_wrap( ~ `Initial Type Group`) +
theme_minimal() +
theme(strip.text.x = element_text(size = rel(0.6)))
# Chunk 31
time_spd_plot
# Chunk 32
str(spd_times$`Initial Type Group`)
spd_times$`Initial Type Group` <- factor(spd_times$`Initial Type Group`)
str(spd_times$`Initial Type Group`)
head(as.numeric(spd_times$`Initial Type Group`))
spd_vol <- spd_times %>% group_by(`Initial Type Group`) %>%
summarize(n_events = n()) %>% arrange(desc(n_events))
# set levels using order from sorted volume table
spd_times_2 <- spd_times %>% mutate(`Initial Type Group` = factor(`Initial Type Group`, levels = spd_vol$`Initial Type Group`))
# replot
time_spd_plot_2 <- ggplot(spd_times_2, aes(x = hour)) +
geom_histogram(binwidth = 2) +
facet_wrap( ~ `Initial Type Group`) +
theme_minimal() +
theme(strip.text.x = element_text(size = rel(0.6)))
spd_vol <- spd_times %>% group_by(`Initial Type Group`) %>%
summarize(n_events = n()) %>% arrange(desc(n_events))
# set levels using order from sorted volume table
spd_times_2 <- spd_times %>% mutate(`Initial Type Group` = factor(`Initial Type Group`, levels = spd_vol$`Initial Type Group`))
# replot
time_spd_plot_2 <- ggplot(spd_times_2, aes(x = hour)) +
geom_histogram(binwidth = 2) +
facet_wrap( ~ `Initial Type Group`) +
theme_minimal() +
theme(strip.text.x = element_text(size = rel(0.6)))
time_spd_plot_2
jayz <- billboard_2000 %>% filter(artist == "Jay-Z") %>%
mutate(track = factor(track))
jayz_bad_legend <- ggplot(jayz, aes(x = week, y = rank, group = track, color = track)) +
geom_line() + theme_bw() +
scale_y_reverse(limits = c(100, 0)) +
theme(legend.position = c(0.80, 0.25),
legend.background = element_rect(fill="transparent"))
jayz_bad_legend
jayz <- jayz %>% mutate(track = reorder(track, rank, min))
jayz_good_legend <- ggplot(jayz, aes(x = week, y = rank, group = track, color = track)) +
geom_line() + theme_bw() +
scale_y_reverse(limits = c(100, 0)) +
theme(legend.position = c(0.80, 0.25),
legend.background = element_rect(fill="transparent"))
jayz_good_legend
jayz_biggest <- jayz %>% filter(track %in% c("I Just Wanna Love U ...", "Big Pimpin'"))
levels(jayz_biggest$track)
jayz_biggest <- jayz_biggest %>% droplevels(.)
levels(jayz_biggest$track)
?parse_Factor
?parse_factor
str(spd_times$`Initial Type Group`)
spd_times$`Initial Type Group` <- factor(spd_times$`Initial Type Group`)
str(spd_times$`Initial Type Group`)
head(as.numeric(spd_times$`Initial Type Group`))
str(spd_times$`Initial Type Group`)
spd_times$`Initial Type Group` <- parse_factor(spd_times$`Initial Type Group`)
str(spd_times$`Initial Type Group`)
head(as.numeric(spd_times$`Initial Type Group`))
spd_times <- spd %>%
select(`Initial Type Group`, `Event Clearance Date`) %>%
mutate(hour = hour(`Event Clearance Date`))
str(spd_times$`Initial Type Group`)
spd_times$`Initial Type Group` <- parse_factor(spd_times$`Initial Type Group`)
str(spd_times$`Initial Type Group`)
spd_times$`Initial Type Group` <- parse_factor(spd_times$`Initial Type Group`, levels=NULL)
str(spd_times$`Initial Type Group`)
head(as.numeric(spd_times$`Initial Type Group`))
spd_vol <- spd_times %>% group_by(`Initial Type Group`) %>%
summarize(n_events = n()) %>% arrange(desc(n_events))
# set levels using order from sorted volume table
spd_times_2 <- spd_times %>% mutate(`Initial Type Group` = parse_factor(`Initial Type Group`, levels = spd_vol$`Initial Type Group`))
ggplot(spd_times_2, aes(x = hour)) +
geom_histogram(binwidth = 2) +
facet_wrap( ~ `Initial Type Group`) +
theme_minimal() +
theme(strip.text.x = element_text(size = rel(0.6)))
library(forcats)
str(spd_times$`Initial Type Group`)
spd_times$`Initial Type Group` <- parse_factor(spd_times$`Initial Type Group`, levels=NULL)
str(spd_times$`Initial Type Group`)
head(as.numeric(spd_times$`Initial Type Group`))
??forcats
library(forcats)
??forcats
jayz <- billboard_2000 %>% filter(artist == "Jay-Z") %>%
mutate(track = parse_factor(track))
jayz %>% mutate(track = reorder(track, rank, min))
jayz %>% mutate(track = fct_reorder(track, rank, min))
?fct_reorder
library(help="forcats")
as.list(library(help="forcats"))$info[[2]]
as.list(library(help="forcats"))$info
spd_times %>% group_by(`Initial Type Group`) %>%
summarize(n_events = n()) %>% arrange(desc(n_events))
seq(0,15,1.5)
length(seq(0,15,1.5))
seq(31,125,by = 94/21)
seq(31,125,by = 94/21)[2:21]
seq(31,125, length.out=20)
data.frame("y" = seq(31,125,by = 94/21)[2:21],
"x" = runif(20,min=0,max=10),
"color" =sample(col_vec,20))
col_vec <- colors() # DO NOT EDIT THIS LINE; add code below it.
df_4 <- data.frame("y" = seq(31,125,by = 94/21)[2:21],
"x" = runif(20,min=0,max=10),
"color" =sample(col_vec,20))
df_4
"KEN" 47-2477
data.frame(rbind(
c("VEAZIE",
0.8209192,
631,
FALSE,
0.3417969,
0.3123772,
0.3929314),
c("NATHAN",
0.8418605,
510,
FALSE,
0.3672986,
0.3149038,
0.3832487,),
c("KEN 47-2477",
0.8789572,
537,
FALSE,
0.3680851,
0.2857143,
0.3991131),
c("RATTLESNAKE",
0.8365385,
608,
FALSE,
0.3872255,
0.3076923,
0.3439490),
c("ATKINSON",
0.8556338,
568,
FALSE,
0.3879668,
0.3501048,
0.4310722),
c("FARLEY",
0.8225806,
744,
FALSE,
0.3885246,
0.3601340,
0.3778966)))
data.frame(rbind(
c("VEAZIE",
0.8209192,
631,
FALSE,
0.3417969,
0.3123772,
0.3929314),
c("NATHAN",
0.8418605,
510,
FALSE,
0.3672986,
0.3149038,
0.3832487),
c("KEN 47-2477",
0.8789572,
537,
FALSE,
0.3680851,
0.2857143,
0.3991131),
c("RATTLESNAKE",
0.8365385,
608,
FALSE,
0.3872255,
0.3076923,
0.3439490),
c("ATKINSON",
0.8556338,
568,
FALSE,
0.3879668,
0.3501048,
0.4310722),
c("FARLEY",
0.8225806,
744,
FALSE,
0.3885246,
0.3601340,
0.3778966)))
general_election_2 <- data.frame(rbind(
c("VEAZIE",
0.8209192,
631,
FALSE,
0.3417969,
0.3123772,
0.3929314),
c("NATHAN",
0.8418605,
510,
FALSE,
0.3672986,
0.3149038,
0.3832487),
c("KEN 47-2477",
0.8789572,
537,
FALSE,
0.3680851,
0.2857143,
0.3991131),
c("RATTLESNAKE",
0.8365385,
608,
FALSE,
0.3872255,
0.3076923,
0.3439490),
c("ATKINSON",
0.8556338,
568,
FALSE,
0.3879668,
0.3501048,
0.4310722),
c("FARLEY",
0.8225806,
744,
FALSE,
0.3885246,
0.3601340,
0.3778966)))
names(general_election_2) <- c("Precinct",
"turnout",
"num_registered",
"Seattle",
"supp_dem_president",
"supp_dem_governor",
"supp_dem_L_governor")
general_election_2 %>% gather(key=Race, value=supp_dem_president:supp_dem_L_governor)
library(tidyverse)
general_election_2 %>% gather(key=Race, value=supp_dem_president:supp_dem_L_governor)
?gather
general_election_2 %>% gather(key=Race, value=support, supp_dem_president:supp_dem_L_governor)
129.59/4
(77.75*2)+(36.6*2)
5.41+39.92
129.59/4
library(tidyverse)
general_election_2 <- data.frame(rbind(
c("VEAZIE",
0.8209192,
631,
FALSE,
0.3417969,
0.3123772,
0.3929314),
c("NATHAN",
0.8418605,
510,
FALSE,
0.3672986,
0.3149038,
0.3832487),
c("KEN 47-2477",
0.8789572,
537,
FALSE,
0.3680851,
0.2857143,
0.3991131),
c("RATTLESNAKE",
0.8365385,
608,
FALSE,
0.3872255,
0.3076923,
0.3439490),
c("ATKINSON",
0.8556338,
568,
FALSE,
0.3879668,
0.3501048,
0.4310722),
c("FARLEY",
0.8225806,
744,
FALSE,
0.3885246,
0.3601340,
0.3778966)))
names(general_election_2) <- c("Precinct",
"turnout",
"num_registered",
"Seattle",
"supp_dem_president",
"supp_dem_governor",
"supp_dem_L_governor")
general_election_2 %>% gather(key=Race, value=support, supp_dem_president:supp_dem_L_governor)
gen_elec <- general_election_2 %>% gather(key=Race, value=support, supp_dem_president:supp_dem_L_governor)
?spread
gen_elec %>% spread(Race, support)
general_election_2
gen_elec
data.frame(
rbind(
c(1, ADAIR, 856, 0.9450935, 0.5117429, 0.4103832, 0.4907293, FALSE),
c(2, ALDARRA, 733, 0.8526603, 0.5088000, 0.4272000, 0.4176000, FALSE),
c(3, ALDER SPRINGS, 545, 0.8605505, 0.5074627, 0.4179104, 0.4307036, FALSE)), stringsAsFactors=FALSE)
data.frame(
rbind(
c(1, "ADAIR", 856, 0.9450935, 0.5117429, 0.4103832, 0.4907293, FALSE),
c(2, "ALDARRA", 733, 0.8526603, 0.5088000, 0.4272000, 0.4176000, FALSE),
c(3, "ALDER SPRINGS", 545, 0.8605505, 0.5074627, 0.4179104, 0.4307036, FALSE)), stringsAsFactors=FALSE)
<fctr>  <int>     <dbl>     <dbl>     <dbl>                 <dbl> <lgl>
Tidyking <- data.frame(
rbind(
c(1, "ADAIR", 856, 0.9450935, 0.5117429, 0.4103832, 0.4907293, FALSE),
c(2, "ALDARRA", 733, 0.8526603, 0.5088000, 0.4272000, 0.4176000, FALSE),
c(3, "ALDER SPRINGS", 545, 0.8605505, 0.5074627, 0.4179104, 0.4307036, FALSE)), stringsAsFactors=FALSE)
names(Tidyking) <- c("Precinct", "VotReg", "Turnout", "President", "Governer", "`Lieutenant Governer`", "SEA")
Small_TidyKing <- TidyKing %>% filter(VotReg>=500) %>% gather(key=Race, value=DemPercent, 4:6) %>% group_by(Race) %>%  arrange(VotReg)
library(tidyverse)
Small_TidyKing <- TidyKing %>% filter(VotReg>=500) %>% gather(key=Race, value=DemPercent, 4:6) %>% group_by(Race) %>%  arrange(VotReg)
TidyKing <- data.frame(
rbind(
c(1, "ADAIR", 856, 0.9450935, 0.5117429, 0.4103832, 0.4907293, FALSE),
c(2, "ALDARRA", 733, 0.8526603, 0.5088000, 0.4272000, 0.4176000, FALSE),
c(3, "ALDER SPRINGS", 545, 0.8605505, 0.5074627, 0.4179104, 0.4307036, FALSE)), stringsAsFactors=FALSE)
names(TidyKing) <- c("Precinct", "VotReg", "Turnout", "President", "Governer", "`Lieutenant Governer`", "SEA")
Small_TidyKing <- TidyKing %>% filter(VotReg>=500) %>% gather(key=Race, value=DemPercent, 4:6) %>% group_by(Race) %>%  arrange(VotReg)
TidyKing <- data.frame(
rbind(
c(1, "ADAIR", 856, 0.9450935, 0.5117429, 0.4103832, 0.4907293, FALSE),
c(2, "ALDARRA", 733, 0.8526603, 0.5088000, 0.4272000, 0.4176000, FALSE),
c(3, "ALDER SPRINGS", 545, 0.8605505, 0.5074627, 0.4179104, 0.4307036, FALSE)), stringsAsFactors=FALSE)
names(TidyKing) <- c("Precinct", "VotReg", "Turnout", "President", "Governer", "`Lieutenant Governer`", "SEA")
Small_TidyKing <- data.frame(
rbind(
c(1, "ADAIR", 856, 0.9450935, 0.5117429, 0.4103832, 0.4907293, FALSE),
c(2, "ALDARRA", 733, 0.8526603, 0.5088000, 0.4272000, 0.4176000, FALSE),
c(3, "ALDER SPRINGS", 545, 0.8605505, 0.5074627, 0.4179104, 0.4307036, FALSE)), stringsAsFactors=FALSE)
names(Small_TidyKing) <- c("Precinct", "VotReg", "Turnout", "President", "Governer", "`Lieutenant Governer`", "SEA")
ggplot(Small_TidyKing, aes(Precinct, DemPercent, color=Race))+geom_line()
Small_TidyKing <- TidyKing %>% filter(VotReg>=500) %>% gather(key=Race, value=DemPercent, President:`Lieutenant Governer`) %>% group_by(Race) %>%  arrange(VotReg)
Small_TidyKing <- data.frame(
rbind(
c(1, "ADAIR", 856, 0.9450935, 0.5117429, 0.4103832, 0.4907293, FALSE),
c(2, "ALDARRA", 733, 0.8526603, 0.5088000, 0.4272000, 0.4176000, FALSE),
c(3, "ALDER SPRINGS", 545, 0.8605505, 0.5074627, 0.4179104, 0.4307036, FALSE)), stringsAsFactors=FALSE)
names(Small_TidyKing) <- c("Precinct", "VotReg", "Turnout", "President", "Governer", "`Lieutenant Governer`", "SEA")
Small_TidyKing <- TidyKing %>% filter(VotReg>=500) %>% gather(key=Race, value=DemPercent, President:`Lieutenant Governer`, -Precinct:Turnout) %>% group_by(Race) %>%  arrange(VotReg)
TidyKing <- data.frame(
rbind(
c(1, "ADAIR", 856, 0.9450935, 0.5117429, 0.4103832, 0.4907293, FALSE),
c(2, "ALDARRA", 733, 0.8526603, 0.5088000, 0.4272000, 0.4176000, FALSE),
c(3, "ALDER SPRINGS", 545, 0.8605505, 0.5074627, 0.4179104, 0.4307036, FALSE)), stringsAsFactors=FALSE)
names(TidyKing) <- c("Precinct", "VotReg", "Turnout", "President", "Governer", "`Lieutenant Governer`", "SEA")
Small_TidyKing <- TidyKing %>% filter(VotReg>=500) %>% gather(key=Race, value=DemPercent, President:`Lieutenant Governer`, -Precinct:Turnout) %>% group_by(Race) %>%  arrange(VotReg)
TidyKing
TidyKing %>% filter(VotReg>=500)
TidyKing <- data.frame(
rbind(
c(1, "ADAIR", 856, 0.9450935, 0.5117429, 0.4103832, 0.4907293, FALSE),
c(2, "ALDARRA", 733, 0.8526603, 0.5088000, 0.4272000, 0.4176000, FALSE),
c(3, "ALDER SPRINGS", 545, 0.8605505, 0.5074627, 0.4179104, 0.4307036, FALSE)), stringsAsFactors=FALSE)
names(TidyKing) <- c("Precinct", "VotReg", "Turnout", "President", "Governer", "`Lieutenant Governer`", "SEA")
Small_TidyKing <- TidyKing %>% gather(key=Race, value=DemPercent, President:`Lieutenant Governer`, -Precinct:Turnout) %>% group_by(Race) %>%  arrange(VotReg)
rm(list=ls())
TidyKing <- data.frame(
rbind(
c(1, "ADAIR", 856, 0.9450935, 0.5117429, 0.4103832, 0.4907293, FALSE),
c(2, "ALDARRA", 733, 0.8526603, 0.5088000, 0.4272000, 0.4176000, FALSE),
c(3, "ALDER SPRINGS", 545, 0.8605505, 0.5074627, 0.4179104, 0.4307036, FALSE)), stringsAsFactors=FALSE)
colnames(TidyKing) <- c("Precinct", "VotReg", "Turnout", "President", "Governer", "`Lieutenant Governer`", "SEA")
Small_TidyKing <- TidyKing %>% gather(key=Race, value=DemPercent, President:`Lieutenant Governer`, -Precinct:Turnout) %>% group_by(Race) %>%  arrange(VotReg)
Small_TidyKing <- TidyKing %>% gather(key=Race, value=DemPercent, -Precinct:Turnout) %>% group_by(Race) %>%  arrange(VotReg)
?gather
Small_TidyKing <- TidyKing %>% gather(key=Race, value=DemPercent, 4:6) %>% group_by(Race) %>%  arrange(VotReg)
TidyKing <- data.frame(
rbind(
c("ADAIR", 856, 0.9450935, 0.5117429, 0.4103832, 0.4907293, FALSE),
c("ALDARRA", 733, 0.8526603, 0.5088000, 0.4272000, 0.4176000, FALSE),
c("ALDER SPRINGS", 545, 0.8605505, 0.5074627, 0.4179104, 0.4307036, FALSE)), stringsAsFactors=FALSE)
colnames(TidyKing) <- c("Precinct", "VotReg", "Turnout", "President", "Governer", "`Lieutenant Governer`", "SEA")
Small_TidyKing <- TidyKing %>% gather(key=Race, value=DemPercent, 4:6) %>% group_by(Race) %>%  arrange(VotReg)
ggplot(Small_TidyKing, aes(Precinct, DemPercent, color=Race))+geom_line()
ggplot(Small_TidyKing, aes(Precinct, DemPercent, color=Race, group=1)) + geom_line()
ggplot(Small_TidyKing, aes(Precinct, DemPercent, color=Race, group=Race)) + geom_line()
0.175/2
0.0875*4
0.0875*8
0.0875*10
.175*5
# Chunk 1: setup
library(tidyverse)
setwd("C:/Users/cclan/OneDrive/GitHub/CSSS508/Lectures/Week8/")
load("restaurants.Rdata")
# Chunk 3: nchar_zip
restaurants %>% mutate(ZIP_length = nchar(Zip_Code)) %>%
group_by(ZIP_length) %>% tally()
# Chunk 4: substr
restaurants <- restaurants %>%
mutate(ZIP_5 = substr(Zip_Code, 1, 5))
head(unique(restaurants$ZIP_5))
# Chunk 5: mailing_address
restaurants <- restaurants %>%
mutate(mailing_address = paste(Address, ", ", City, ", WA ", ZIP_5, sep = ""))
head(unique(restaurants$mailing_address))
# Chunk 6: readr_types_example
# use the class function to get the type of data
column_types <- sapply(restaurants, class)
# extract 1st character
column_types_1 <- substr(column_types, 1, 1)
# use paste with collapse to get one string
(column_types_collapse <- paste(column_types_1, collapse = ""))
# Chunk 7: function_to_get_types
readr_input_types <- function(data) {
column_types_1 <- substr(sapply(data, class), 1, 1)
return(paste(column_types_1, collapse = ""))
}
readr_input_types(swiss)
readr_input_types(restaurants)
# Chunk 8: paste0
paste(1:5, letters[1:5]) # sep is a space by default
paste(1:5, letters[1:5], sep ="")
paste0(1:5, letters[1:5])
# Chunk 10: load_stringr
library(stringr)
# Chunk 11: str_sub_example
str_sub("Washington", 1, -3)
# Chunk 12: str_c_example
str_c(letters[1:5], 1:5)
# Chunk 13: nchar_v_str_length
nchar("weasels")
str_length("weasels")
# Chunk 14: make_seattle_uppercase
head(unique(restaurants$City))
restaurants <- restaurants %>%
mutate_each(funs(str_to_upper), Name, Address, City)
head(unique(restaurants$City))
# Chunk 15: show_whitespace
head(unique(restaurants$Name, 4))
# Chunk 16: get_char_columns
column_types <- sapply(restaurants, class)
char_columns <- names(column_types)[column_types == "character"]
# Chunk 17: clean_whitespace
# use mutate_each_ to trim all the character columns
restaurants <- restaurants %>%
mutate_each_(funs(str_trim), char_columns)
head(unique(restaurants$Name), 4)
# Chunk 18: coffee_check
coffee <- restaurants %>% filter(str_detect(Name, "COFFEE|ESPRESSO|ROASTER"))
head(unique(coffee$Name))
# Chunk 19: coffee_histogram
recent_coffee_scores <- coffee %>% select(Business_ID, Name, Inspection_Score, Date) %>% group_by(Business_ID) %>% filter(Date == max(Date)) %>% distinct(.keep_all=TRUE)
hist(recent_coffee_scores$Inspection_Score, xlab = "Most recent inspection score", main = "Most recent inspection scores\nfor Seattle coffee shops")
# Chunk 20: look_for_206
area_code_206_pattern <- "^\\(?206"
phone_test_examples <- c("2061234567", "(206)1234567", "(206) 123-4567", "555-206-1234")
str_detect(phone_test_examples, area_code_206_pattern)
str_view((phone_test_examples, area_code_206_pattern)
str_view(phone_test_examples, area_code_206_pattern)
?str_c
?str_Detect
?str_detect
?hist
with(coffee %>% select(Business_ID, Name, Inspection_Score, Date) %>% group_by(Business_ID) %>% filter(Date == max(Date)) %>% distinct(.keep_all=TRUE), hist(Inspection_Score, xlab = "Most recent inspection score", main = "Most recent inspection scores\nfor Seattle coffee shops"))
